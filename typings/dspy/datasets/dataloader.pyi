"""
This type stub file was generated by pyright.
"""

import dspy
import pandas as pd
from collections.abc import Mapping
from typing import List, Optional, TYPE_CHECKING, Tuple, Union
from dspy.datasets.dataset import Dataset

if TYPE_CHECKING:
    ...
class DataLoader(Dataset):
    def __init__(self) -> None:
        ...
    
    def from_huggingface(self, dataset_name: str, *args, input_keys: Tuple[str] = ..., fields: Optional[Tuple[str]] = ..., **kwargs) -> Union[Mapping[str, List[dspy.Example]], List[dspy.Example]]:
        ...
    
    def from_csv(self, file_path: str, fields: Optional[List[str]] = ..., input_keys: Tuple[str] = ...) -> List[dspy.Example]:
        ...
    
    def from_pandas(self, df: pd.DataFrame, fields: Optional[List[str]] = ..., input_keys: tuple[str] = ...) -> list[dspy.Example]:
        ...
    
    def from_json(self, file_path: str, fields: Optional[List[str]] = ..., input_keys: Tuple[str] = ...) -> List[dspy.Example]:
        ...
    
    def from_parquet(self, file_path: str, fields: Optional[List[str]] = ..., input_keys: Tuple[str] = ...) -> List[dspy.Example]:
        ...
    
    def from_rm(self, num_samples: int, fields: List[str], input_keys: List[str]) -> List[dspy.Example]:
        ...
    
    def sample(self, dataset: List[dspy.Example], n: int, *args, **kwargs) -> List[dspy.Example]:
        ...
    
    def train_test_split(self, dataset: List[dspy.Example], train_size: Union[int, float] = ..., test_size: Optional[Union[int, float]] = ..., random_state: Optional[int] = ...) -> Mapping[str, List[dspy.Example]]:
        ...
    


