"""
This type stub file was generated by pyright.
"""

def env_worker(inq, outq): # -> None:
    """
    Worker process: creates a single AlfredTWEnv instance,
    handles 'init' (with task idx) and 'step' (with action).
    """
    ...

class EnvPool:
    """
    Pool of processes, each with a unique env_worker.
    Acquire a worker using a context manager for safe usage:
        with pool.session() as sess:
            sess.init(5)              # init with idx=5
            obs, rew, done, info = sess.step("go north")
            ...
    """
    def __init__(self, size=...) -> None:
        ...
    
    def close_all(self): # -> None:
        """Close all processes in the pool."""
        ...
    
    def session(self): # -> _EnvSession:
        """Context manager that acquires/releases a single worker."""
        ...
    


class _EnvSession:
    """
    A context manager that acquires a worker from the pool,
    provides .init(idx) and .step(action), then releases the worker.
    """
    def __init__(self, pool: EnvPool) -> None:
        ...
    
    def __enter__(self): # -> Self:
        ...
    
    def __exit__(self, exc_type, exc_val, exc_tb): # -> None:
        ...
    
    def init(self, idx):
        ...
    
    def step(self, action):
        ...
    


class AlfWorld:
    def __init__(self, max_threads=...) -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    


