"""
This type stub file was generated by pyright.
"""

from typing import Any, Awaitable, Callable, TYPE_CHECKING
from dspy.primitives.module import Module

if TYPE_CHECKING:
    ...
_limiter = ...
def get_async_max_workers():
    ...

def get_limiter(): # -> CapacityLimiter:
    ...

def asyncify(program: Module) -> Callable[[Any, Any], Awaitable[Any]]:
    """
    Wraps a DSPy program so that it can be called asynchronously. This is useful for running a
    program in parallel with another task (e.g., another DSPy program).

    This implementation propagates the current thread's configuration context to the worker thread.

    Args:
        program: The DSPy program to be wrapped for asynchronous execution.

    Returns:
        An async function: An async function that, when awaited, runs the program in a worker thread.
            The current thread's configuration context is inherited for each call.
    """
    ...

