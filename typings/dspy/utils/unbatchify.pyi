"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, List

class Unbatchify:
    def __init__(self, batch_fn: Callable[[List[Any]], List[Any]], max_batch_size: int = ..., max_wait_time: float = ...) -> None:
        """
        Initializes the Unbatchify.

        Args:
            batch_fn: The batch-processing function that accepts a list of inputs and returns a list of outputs.
            max_batch_size: The maximum number of items to include in a batch.
            max_wait_time: The maximum time (in seconds) to wait for batch to fill before processing.
        """
        ...
    
    def __call__(self, input_item: Any) -> Any:
        """
        Thread-safe function that accepts a single input and returns the corresponding output.

        Args:
            input_item: The single input item to process.

        Returns:
            The output corresponding to the input_item after processing through batch_fn.
        """
        ...
    
    def close(self): # -> None:
        """
        Stops the worker thread and cleans up resources.
        """
        ...
    
    def __enter__(self): # -> Self:
        """
        Enables use as a context manager.
        """
        ...
    
    def __exit__(self, exc_type, exc_value, traceback): # -> None:
        """
        Ensures resources are cleaned up when exiting context.
        """
        ...
    
    def __del__(self): # -> None:
        """
        Ensures the worker thread is terminated when the object is garbage collected.
        """
        ...
    


