"""
This type stub file was generated by pyright.
"""

from types import TracebackType
from typing import Any, Dict, List, Optional

class InterpreterError(RuntimeError): ...

class PythonInterpreter:
    r"""
    PythonInterpreter that runs code in a sandboxed environment using Deno and Pyodide.

    Prerequisites:
    - Deno (https://docs.deno.com/runtime/getting_started/installation/).

    Example Usage:
    ```python
    code_string = "print('Hello'); 1 + 2"
    with PythonInterpreter() as interp:
        output = interp(code_string) # If final statement is non-None, prints the numeric result, else prints captured output
    ```
    """
    def __init__(self, deno_command: Optional[List[str]] = ...) -> None: ...
    def execute(self, code: str, variables: Optional[Dict[str, Any]] = ...) -> Any: ...
    def __enter__(self):  # -> Self:
        ...
    def __exit__(
        self,
        _exc_type: Optional[type[BaseException]],
        _exc_val: Optional[BaseException],
        _exc_tb: Optional[TracebackType],
    ):  # -> None:
        ...
    def __call__(self, code: str, variables: Optional[Dict[str, Any]] = ...) -> Any: ...
    def shutdown(self) -> None: ...
