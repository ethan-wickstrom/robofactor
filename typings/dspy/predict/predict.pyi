"""
This type stub file was generated by pyright.
"""

from dspy.predict.parameter import Parameter
from dspy.primitives.program import Module

logger = ...

class Predict(Module, Parameter):
    def __init__(self, signature, callbacks=..., **config) -> None: ...
    def reset(self):  # -> None:
        ...
    def dump_state(self):  # -> dict[str, Any]:
        ...
    def load_state(self, state):  # -> Self:
        """Load the saved state of a `Predict` object.

        Args:
            state (dict): The saved state of a `Predict` object.

        Returns:
            self: Returns self to allow method chaining
        """
        ...

    def __call__(self, *args, **kwargs): ...
    async def acall(self, *args, **kwargs): ...
    def forward(self, **kwargs):  # -> Prediction:
        ...
    async def aforward(self, **kwargs):  # -> Prediction:
        ...
    def update_config(self, **kwargs):  # -> None:
        ...
    def get_config(self):  # -> dict[str, Any]:
        ...
    def __repr__(self):  # -> str:
        ...

def serialize_object(
    obj,
):  # -> dict[str, Any] | list[dict[str, Any] | list[Any] | tuple[dict[str, Any] | list[Any] | tuple[Any, ...] | dict[Any, Any] | Any, ...] | dict[Any, Any] | Any] | tuple[dict[str, Any] | list[Any] | tuple[Any, ...] | dict[Any, Any] | Any, ...] | dict[Any, Any]:
    """
    Recursively serialize a given object into a JSON-compatible format.
    Supports Pydantic models, lists, dicts, and primitive types.
    """
    ...
