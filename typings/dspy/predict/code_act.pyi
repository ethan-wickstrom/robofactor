"""
This type stub file was generated by pyright.
"""

from inspect import Signature
from typing import Callable, Type, Union
from dspy.predict.program_of_thought import ProgramOfThought
from dspy.predict.react import ReAct

logger = ...

class CodeAct(ReAct, ProgramOfThought):
    """
    CodeAct is a module that utilizes the Code Interpreter and predefined tools to solve the problem.
    """
    def __init__(
        self, signature: Union[str, Type[Signature]], tools: list[Callable], max_iters: int = ...
    ) -> None:
        """
        Initializes the CodeAct class with the specified model, temperature, and max tokens.

        Args:
            signature (Union[str, Type[Signature]]): The signature of the module.
            tools (list[Callable]): The tool callables to be used. CodeAct only accepts functions and not callable objects.
            max_iters (int): The maximum number of iterations to generate the answer.

        Example:
            ```python
            from dspy.predict import CodeAct
            def factorial(n):
                if n == 1:
                    return 1
                return n * factorial(n-1)

            act = CodeAct("n->factorial", tools=[factorial])
            act(n=5) # 120
            ```
        """
        ...

    def forward(self, **kwargs):  # -> Prediction:
        ...
