"""
This type stub file was generated by pyright.
"""

import dspy
from typing import List, Optional, Union

"""Clarifai as retriver to retrieve hits"""

class ClarifaiRM(dspy.Retrieve):
    """
    Retrieval module uses clarifai to return the Top K relevant pasages for the given query.
    Assuming that you have ingested the source documents into clarifai App, where it is indexed and stored.

    Args:
        clarifai_user_id (str): Clarifai unique user_id.
        clarfiai_app_id (str): Clarifai App ID, where the documents are stored.
        clarifai_pat (str): Clarifai PAT key.
        k (int): Top K documents to retrieve.

    Examples:
        TODO
    """
    def __init__(
        self,
        clarifai_user_id: str,
        clarfiai_app_id: str,
        clarifai_pat: Optional[str] = ...,
        k: int = ...,
    ) -> None: ...
    def retrieve_hits(self, hits):  # -> str:
        ...
    def forward(
        self, query_or_queries: Union[str, List[str]], k: Optional[int] = ..., **kwargs
    ) -> dspy.Prediction:
        """Uses clarifai-python SDK search function and retrieves top_k similar passages for given query,
        Args:
             query_or_queries : single query or list of queries
             k : Top K relevant documents to return

        Returns:
             passages in format of dotdict

        Examples:
        Below is a code snippet that shows how to use Marqo as the default retriver:
         ```python
         import clarifai
         llm = dspy.Clarifai(model=MODEL_URL, api_key="YOUR CLARIFAI_PAT")
         retriever_model = ClarifaiRM(clarifai_user_id="USER_ID", clarfiai_app_id="APP_ID", clarifai_pat="YOUR CLARIFAI_PAT")
         dspy.settings.configure(lm=llm, rm=retriever_model)
         ```
        """
        ...
