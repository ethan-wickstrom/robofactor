[project]
name = "Robofactor"
version = "0.1.1"
description = "The robot who refactors: /[^_^]\\"
readme = "README.md"
authors = [{ name = "ethan-wickstrom", email = "e.t.wickstrom@wustl.edu" }]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
  "typer>=0.16.0",
  "rich>=13.7.1",
  "pyflakes>=3.3.2",
  "flake8>=7.2.0",
  "dspy-ai==2.6.19",
  "mlflow>=3.1.0",
  "toml>=0.10.2",
  "returns>=0.25.0",
  "dspy>=3.0.0b1",
  "networkx>=3.4.2",
  "grep-ast>=0.9.0",
]

[project.urls]
Homepage = "https://github.com/ethan-wickstrom/robofactor"
Repository = "https://github.com/ethan-wickstrom/robofactor.git"
Issues = "https://github.com/ethan-wickstrom/robofactor/issues"
Documentation = "https://github.com/ethan-wickstrom/robofactor#readme"

[project.scripts]
robofactor = "robofactor.app.main:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/robofactor"]

[dependency-groups]
dev = ["basedpyright>=1.29.4", "ruff>=0.11.13", "toml>=0.10.2"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "B",   # flake8-bugbear
  "UP",  # pyupgrade
  "RUF", # ruff-specific rules
]
ignore = [
  "E501", # line too long (handled by formatter)
]

[tool.basedpyright]
include = ["src"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "src/experimental",
  "src/typestubs",
]
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownArgumentType = false
reportMissingTypeStubs = false

[tool.basedpyright.defineConstant]
DEBUG = true


[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
  "-ra",
  "--strict-markers",
  "--strict-config",
  "--cov=robofactor",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src/robofactor"]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[tool.uv.sources]
dspy = { git = "https://github.com/stanfordnlp/dspy.git" }
